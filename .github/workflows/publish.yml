# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel
      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          body_path: ./CHANGELOG.md
          files: |
            ./dist/**
            ./CHANGELOG.md

      - name: Upload package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package-dist
          path: dist/

  pypi-publish:
    name: release to PyPI
    runs-on: ubuntu-latest
    environment: pub
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      # retrieve your distributions here
      - name: Download package artifacts
        uses: actions/download-artifact@v3
        with:
          name: package-dist
          path: dist/

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
